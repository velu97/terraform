apiVersion: v1
kind: Namespace
metadata:
  name: rails-app
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rails-app-sa
  namespace: rails-app
  annotations:
    eks.amazonaws.com/role-arn: <IRSA_ROLE_ARN>
---
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: db-password-secretsmanager
  namespace: rails-app
spec:
  provider: aws
  parameters:
    objects: |
      - objectName: <DB_PASSWORD_SECRET_ARN>
        objectType: "secretsmanager"
        jmesPath:
          - path: password
            objectAlias: db-password
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rails-app
  namespace: rails-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: rails-app
  template:
    metadata:
      labels:
        app: rails-app
    spec:
      serviceAccountName: rails-app-sa
      containers:
        - name: rails-app
          image: <ECR_IMAGE_URI>
          ports:
            - containerPort: 3000
          env:
            - name: RDS_HOSTNAME
              value: <DB_ENDPOINT>
            - name: RDS_DB_NAME
              value: appdb
            - name: RDS_USERNAME
              value: appuser
            - name: RDS_PORT
              value: "5432"
            - name: RDS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-password
                  key: db-password
            - name: S3_BUCKET_NAME
              value: <S3_BUCKET>
            - name: S3_REGION_NAME
              value: <Region>
            - name: LB_ENDPOINT
              value: <value>
            - name: RAILS_ENV
              value: production
          volumeMounts:
            - name: secrets-store-inline
              mountPath: "/mnt/secrets-store"
              readOnly: true
      volumes:
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: db-password-secretsmanager
---
apiVersion: v1
kind: Service
metadata:
  name: rails-app-service
  namespace: rails-app
spec:
  type: NodePort
  selector:
    app: rails-app
  ports:
    - port: 80
      targetPort: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rails-app-ingress
  namespace: rails-app
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}]'
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: rails-app-service
                port:
                  number: 80